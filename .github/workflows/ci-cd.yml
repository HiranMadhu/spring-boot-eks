name: Deploy to AWS ECS
on:
  push:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.0
        id: install

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: 1.1
          REPOSITORY: springboot-example
        run: |
            docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Upadte kube config
        run: aws eks update-kubeconfig --name my-cluster2

      - name: Deploy to EKS
        run: |
          kubectl apply -f deploy.yaml --validate=false
          kubectl apply -f service.yaml
